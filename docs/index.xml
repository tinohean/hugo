<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TinoHean</title>
    <link>http://tinohean.top/</link>
    <description>Recent content on TinoHean</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://tinohean.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Init</title>
      <link>http://tinohean.top/init/</link>
      <pubDate>Sun, 02 Apr 2017 18:16:30 +0800</pubDate>
      
      <guid>http://tinohean.top/init/</guid>
      <description>上个月我在公司内部做了一次关于docker的技术分享，主题就是简单介绍下docker的技术原理及使用。在做PPT的时候，我发现这并不是一个那么容易的事情。
难点其一是技术原理的理解。与研发不同的是，运维平时并不注重深入了解技术实现这一块。对于工具型的技术方案，一般仅限于了解其大概的模块框架，并不具备对外者讲解清楚技术封装的基本能力。这样的学习模式好处是上手快，翻翻文档很容易就部署一套完整的体系。坏处也显而易见，遇到系统性的问题很难有思路去排查，对于配置也是照本宣科，依靠百度和谷歌解决大部分问题。而对于传统运维来讲，系统底层技术面的匮乏，加上代码阅读能力较低，能够深入了解一个技术框架的实现并不是一件很轻松的事情。
难点其二是分享本身。分享之所以成为分享，其核心的逻辑是先自我消化，然后再通过讲解的方式阐述消化的内容。这一吞吐的过程势必暴露分享者的技术储备。同时，讲解者必须具备一定的逻辑和分析能力 ，将脑中形成的技术面归纳通过文图的形式条理化，具象化。将复杂的事情简单讲解出来是一个需要持久化练习的能力。人类本身讨厌一切复杂的事情。我更喜欢类比这个学习方法。类比的过程可以将抽象的层面具象化，更容易理解和记忆。然而技术上的理解，很难有类比的对象。我只能尝试用概括的方式把消化掉的一堆堆的文档和技术文章精炼为几个简单的图表。
分享是一个自我思考及重复记忆的过程。在准备技术原理的过程中，我推翻了很多之前的技术误解，也消除了一些模棱两可的问题，对于docker的整体认知更加全面。除此之外，这一次分享把脑中的技术记忆渗入了更为底层的维度。而学习正是从理解到重复记忆最后到实践的过程。
我的短板在系统化，基础。学的太杂而不深入，大部分技术都是浅尝辄止。可能也是很多运维的通病吧。写作可以强迫我去渗透，总结，记录。
突然想起高中时读过的海子的一首诗 《最后一夜和第一日的献诗》
今夜你的黑头发 是岩石上寂寞的黑夜 牧羊人用雪白的羊群 填满飞机场周同的黑暗 黑夜比我更早睡去 黑夜是神的伤口 你是我的伤口 羊群和花朵也是岩石的伤口 雪山 用大雪填满飞机场周围的黑暗 雪山女神吃的是野兽穿的是鲜花 今夜九十九座雪山高出天堂 使我彻夜难眠 在当年词汇匮乏的我心里留下了史诗般的具象。雪山这一画面感极强的描述简直惊为天人。这就是诗歌的魅力，也是海子的天才，简单的几个词语的使用，就能形成如此诗化的意境。海子心中的雪山真实的欲求是什么，我们已经无从知道了。然而，仅仅从意象而已，诗歌本身就有了意义。把脑中的画面形象地描述出来，写作者追求的终极目的之一无非是这样的境界了吧。为此，我也决定开一个个人网站，把内心所想化作一座座雪山。
或许哪天，你看到这些文字，知晓了我当时的心境。那么，你也曾抵达我的峰顶。</description>
    </item>
    
  </channel>
</rss>