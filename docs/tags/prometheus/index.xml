<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>prometheus on 半岛无风</title>
    <link>http://tinohean.top/tags/prometheus/</link>
    <description>Recent content in prometheus on 半岛无风</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Feb 2022 10:42:45 +0800</lastBuildDate><atom:link href="http://tinohean.top/tags/prometheus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>node_exporter在k8s集群的部署方案</title>
      <link>http://tinohean.top/p/node_exporter%E5%9C%A8k8s%E9%9B%86%E7%BE%A4%E7%9A%84%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 25 Feb 2022 10:42:45 +0800</pubDate>
      
      <guid>http://tinohean.top/p/node_exporter%E5%9C%A8k8s%E9%9B%86%E7%BE%A4%E7%9A%84%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88/</guid>
      <description>node_exporter在k8s集群的部署方案 关于node_exporter 用途 Node exporter是Prometheus常用的一个exporter，主要用于收集内核暴露的硬件和系统级别的监控指标，比如cpu、内存、磁盘等硬件类的使用率。 在一些场景下还可以通过textfile collector特性收集自定义指标，比如无法通过现有的开源exporter收集到的定时任务指标等。
使用限制 由于node_exporter设计的目的是监控主机系统，一些硬件指需要通过对主机的一些系统级别的目录访问获取，比如/proc、/sys等。因此，官方并不建议通过容器进行部署。
 The node_exporter is designed to monitor the host system. It&amp;rsquo;s not recommended to deploy it as a Docker container because it requires access to the host system.
 受限于生产环境和历史遗留原因，总有一些场景需要外部prometheus监控容器集群的node。在这种情况下，node_exporter通过DaemonSet的形式部署在容器集群的每个node中，独立于外部prometheus集群而存在，必须进行额外的权限配置和宿主机目录挂载。
本文即对此类使用场景的部署方案说明。
版本说明  node_exporter: v1.3.1 helm: v3.0.0  部署方案 监控指标整理 作为一个硬件指标exporter, node_exporter默认暴露的指标相当之多，所有指标统计下来上千行，这样就带来了几个问题：
 并不是所有监控指标都是我们需要的。 过多的指标监控给系统带来不必要的资源消耗。  因此，我们需要根据自己的业务监控需求，最小化暴露监控指标。
以下是一些常用的metrics：
# 节点存活时间 node_time_seconds node_boot_time_seconds up # 磁盘I/O node_disk_read_bytes_total node_disk_written_bytes_total # 文件系统 node_filesystem_size_bytes node_filesystem_free_bytes node_filesystem_files node_filesystem_files_free # cpu 负载 node_cpu_seconds_total node_load1 node_load5 # 网络I/O node_netstat_Tcp_CurrEstab node_network_receive_bytes_total node_network_transmit_bytes_total node_public_network_receive_bandwidth node_public_network_transmit_bandwidth # 内存 node_memory_MemTotal_bytes node_memory_MemFree_bytes node_memory_Buffers_bytes node_memory_Cached_bytes # text collector collector 据官方文档中说明，默认开启的collector包括arp、bonding、cpu等，而每个collector暴露的metrics并无详细文档说明。那么，如何获取collector对应的metrics明细呢？</description>
    </item>
    
    <item>
      <title>Prometheus常用Exporter及告警规则</title>
      <link>http://tinohean.top/p/prometheus%E5%B8%B8%E7%94%A8exporter%E5%8F%8A%E5%91%8A%E8%AD%A6%E8%A7%84%E5%88%99/</link>
      <pubDate>Wed, 23 Dec 2020 18:04:34 +0800</pubDate>
      
      <guid>http://tinohean.top/p/prometheus%E5%B8%B8%E7%94%A8exporter%E5%8F%8A%E5%91%8A%E8%AD%A6%E8%A7%84%E5%88%99/</guid>
      <description>Prometheus常用Exporter及硬件指标 Exporter node_exporter 链接：https://github.com/prometheus/node_exporter
用途：用于类UNIX内核暴露的系统及硬件指标获取，比如CPU,MEM,DISK,FD等
process_exporter 链接：https://github.com/ncabatoff/process-exporter
用途：对于一些没有适配Prometheus的应用，可以抓取/proc下面的数据进行指标获取，比如线程数，上下文切换，IO,FD等
blackbox_exporter 链接：https://github.com/prometheus/blackbox_exporter
用途：黑盒探针，应用于一些web服务，API服务的可用性监控，可以通过TCP,HTTP,HTTPS等方式，常见指标包括response code, dns lookup time, duration time等
mysqld_exporter 链接：https://github.com/prometheus/mysqld_exporter
用途：暴露的mysql监控指标，比如连接数，各类CMD qps，buffer大小等
redis_exporter 链接：https://github.com/oliver006/redis_exporter
用途：暴露的redis监控指标，比如QPS，命中率，网络IO，key数量等
druid_exporter 链接：https://github.com/wikimedia/operations-software-druid_exporter
用途：暴露的druid.io相关监控指标，不是很全，可自己定制
jmx_exporter 链接：https://github.com/prometheus/jmx_exporter
用途：java类应用暴露的相关指标。比如kafka，hadoop生态
另外，告警体系如果包括钉钉的话，推荐dingtalk_webhook
Alerts Rules blackbox_exporter 常用的只有存活状态和状态码异常告警
- alert:BlackboxProbeFailedexpr:probe_success == 0for:0mlabels:severity:criticalannotations:summary:Blackbox probe failed (instance {{ $labels.instance }})description:&amp;#34;Probe failed\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;- alert:BlackboxProbeHttpFailureexpr:probe_http_status_code &amp;lt;= 199 OR probe_http_status_code &amp;gt;= 400for:0mlabels:severity:criticalannotations:summary:Blackbox probe HTTP failure (instance {{ $labels.instance }})description:&amp;#34;HTTP status code is not 200-399\n VALUE = {{ $value }}\n LABELS = {{ $labels }}&amp;#34;mysql_exporter 通常包括存活状态，慢查询等。</description>
    </item>
    
  </channel>
</rss>
